services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    image: nginx:1.28.0-alpine3.21
    environment:
      DOMAIN_NAME: "${NGINX_DOMAIN_NAME:-localhost}"
    ports:
      - ${NGINX_PORT:-80}:80
    volumes:
      - type: bind
        source: ./docker/nginx/templates
        target: /etc/nginx/templates
      - type: bind
        source: ./src/laravel
        target: /app
    restart: always
    networks:
      - app-network
  laravel:
    container_name: ${COMPOSE_PROJECT_NAME}-laravel
    build:
      context: ./docker/laravel
      args:
        INSTALL_XDEBUG: ${LARAVEL_INSTALL_XDEBUG:-false}
    image: ${COMPOSE_PROJECT_NAME}-laravel
    environment:
      PHP_IDE_CONFIG: "serverName=${LARAVEL_PHP_IDE_CONFIG_SERVER_NAME:-laravel}"
    volumes:
      - type: bind
        source: ./src/laravel
        target: /app
      - type: bind
        source: ./src/laravel/packages/laravel-astrolens
        target: /app/packages/laravel-astrolens
    extra_hosts:
      - "host.docker.internal:host-gateway"
    working_dir: /app
    restart: always
    networks:
      - app-network
  node:
    container_name: ${COMPOSE_PROJECT_NAME}-node
    image: node:22.16.0-alpine3.21
    volumes:
      - type: bind
        source: ./src/laravel
        target: /app
    working_dir: /app
    user: node
    tty: true
    restart: always
    networks:
      - app-network
  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    image: postgres:17.5-alpine3.21
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
    restart: always
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge